! function(a) {
    "use strict";
    var b = {
        separator: !0,
        ripple_effect: !0,
        search_bar_hide: !1,
        top_fixed: !0,
        full_width: !1,
        right_to_left: !1,
        trigger: "click",
        vertical_tabs_trigger: "hover",
        vertical_tabs_effect_speed: 90,
        drop_down_effect_in_speed: 180,
        drop_down_effect_out_speed: 180,
        drop_down_effect_in_delay: 150,
        drop_down_effect_out_delay: 150,
        outside_close_dropDown: !0,
        sticky_header: !1,
        sticky_header_height: 200,
        sticky_header_animation_speed: 400,
        timer_on: !1,
        timer_morning_color: "cyan",
        internal_links_enable: !0,
        internal_links_toggle_drop_down: !1,
        internal_links_target_speed: 400,
        mobile_search_bar_hide: !1,
        mobile_sticky_header: !1,
        mobile_sticky_header_height: 100,
        media_query_max_width: 920
    };
    a.fn.mashableMenu = function(c) {
        return c = a.extend({}, b, c || {}), this.each(function() {
            var g, h, b = a(this),
                d = "li",
                e = "a",
                f = "active",
                i = "separator",
                j = b.find(".mash-list-items"),
                k = j.find(".drop-down, .drop-down-large, .drop-down-medium"),
                l = b.find(".mash-search-bar"),
                m = "search-bar-hide",
                n = "mash-top-fixed",
                o = "mash-full-width",
                p = k.find(".vertical-tabs-container"),
                q = k.find(".collapsible"),
                r = k.find(".mash-tabs-container"),
                s = b.find(".mash-brand"),
                u = (s.find(".mash-mobile-button"), ".menu-select"),
                v = p.find(".vertical-tabs-content"),
                w = r.find(".mash-tabs"),
                x = r.find(".mash-tabs-content"),
                y = q.find(".collapsible-header"),
                z = q.find(".collapsible-body"),
                A = "right-to-left",
                B = b.find(".form-horizontal"),
                C = B.find(".form-notifier"),
                D = ".DropDownOpen";
            g = function() {
                return g = function(b) {
                    this.name = b
                }, g.prototype.contact_form_ajax = function() {
                    a(B).submit(function(b) {
                        var c, d;
                        c = a(this), b.preventDefault(), d = a(this).serialize(), c.find("button i.fa").css("display", "inline-block"), a.ajax({
                            type: "POST",
                            url: a(this).attr("action"),
                            data: d
                        }).done(function(a) {
                            C.text(a), c.find('input[type="text"]').val(""), c.find('input[type="email"]').val(""), c.find("textarea").val(""), c.find("button i.fa").css("display", "none")
                        }).fail(function(a) {
                            "" !== a.responseText && C.text("Error"), c.find("button i.fa").css("display", "none")
                        })
                    })
                }, g.prototype.collapsible_accordion = function() {
                    q.each(function() {
                        var b, c, d;
                        d = a(this), b = function(a) {
                            if (a === !0) return d.find(z).slideUp(200)
                        }, c = function(c) {
                            d.find(y).off("click").on("click", function(d) {
                                return d = a(this), d.siblings(z).is(":visible") ? d.siblings(z).slideUp(200) : (b(c), d.siblings(z).slideDown(200)), !1
                            })
                        }, d.hasClass("collapsible-accordion") && c(!0), d.hasClass("collapsible-expandable") && c(!1)
                    })
                }, g.prototype.verticalTabsResponsive = function(b) {
                    p.each(function() {
                        var d, g, h, i, j, k, l;
                        if (d = a(this), g = d.find(".vertical-tabs > a"), h = d.find(".vertical-tabs > a.active").attr("href"), k = d.find(".vertical-tabs-content-container"), b === !0) d.find(".vertical-tabs .vertical-tabs-content").remove(), g.hasClass(f) ? a(h).show(0) : (g.eq(0).addClass(f), a(g.eq(0).attr("href")).show(0)), "click" === c.vertical_tabs_trigger && "string" == typeof c.vertical_tabs_trigger && (d.on("click", ".vertical-tabs > a", function() {
                            return !1
                        }), i = function() {
                            var b, h, j, k;
                            b = a(this), h = d.find("a.active"), j = h.attr("href"), b.hasClass(f) ? d.one("click", ".vertical-tabs > a", i) : (g.siblings(e).removeClass(f), b.addClass(f), a(j).stop(!0, !0).fadeOut(c.vertical_tabs_effect_speed, function() {
                                k = b.attr("href"), a(k).stop(!0, !0).fadeIn(c.vertical_tabs_effect_speed), d.one("click", ".vertical-tabs > a", i)
                            }))
                        }, d.one("click", ".vertical-tabs > a", i)), "hover" === c.vertical_tabs_trigger && "string" == typeof c.vertical_tabs_trigger && (d.on("click", ".vertical-tabs > a", function() {
                            return !1
                        }), i = function() {
                            var b, h, j, k;
                            b = a(this), h = d.find("a.active"), j = h.attr("href"), b.hasClass(f) ? d.one("mouseenter", ".vertical-tabs > a", i) : (g.siblings(e).removeClass(f), b.addClass(f), a(j).stop(!0, !0).fadeOut(c.vertical_tabs_effect_speed, function() {
                                k = b.attr("href"), a(k).stop(!0, !0).fadeIn(c.vertical_tabs_effect_speed), d.one("mouseenter", ".vertical-tabs > a", i)
                            }))
                        }, d.one("mouseenter", ".vertical-tabs > a", i));
                        else {
                            if (g.hasClass(f) ? a(h).hide(0) : (g.eq(0).addClass(f), a(g.eq(0).attr("href")).hide(0)), 0 === k.find("> a").length)
                                for (j = 0; j < g.length; j += 1) l = g.eq(j).clone(), k.find(".vertical-tabs-content").eq(j).before(l);
                            d.off("click").on("click", ".vertical-tabs-content-container > a", function(b) {
                                b.stopPropagation(), b.stopImmediatePropagation(), b.preventDefault();
                                var c = a(this);
                                c.parent(".vertical-tabs-content-container").find(e).removeClass(f), c.addClass(f), c.next(".vertical-tabs-content").is(":hidden") ? (c.parent(".vertical-tabs-content-container").find(".vertical-tabs-content").hide(0), c.next(".vertical-tabs-content").show(0)) : c.next(".vertical-tabs-content").hide(0)
                            })
                        }
                    })
                }, g.prototype.drop_down_option_outside = function() {
                    c.internal_links_enable === !0 && "boolean" == typeof c.internal_links_enable && a(D).off("click").on("click", function(b) {
                        b.preventDefault(), b.stopPropagation(), b.stopImmediatePropagation();
                        var e, f, g, h;
                        e = j, f = l, e.is(":hidden") && e.add(f).show(0), g = a(this).attr("href"), h = a(g), h.is(":hidden") ? (h.parents(d).siblings(d).find(k).fadeOut(c.drop_down_effect_out_speed), h.parents(j).siblings(j).find(k).fadeOut(c.drop_down_effect_out_speed), h.fadeIn(c.drop_down_effect_in_speed)) : c.internal_links_toggle_drop_down === !0 && h.fadeOut(c.drop_down_effect_out_speed), 0 === c.internal_links_target_speed && (c.internal_links_target_speed = 10), a("html, body").stop().animate({
                            scrollTop: h.offset().top
                        }, c.internal_links_target_speed)
                    })
                }, g.prototype.brand_close_dropDown = function() {
                    s.find(e).off("click").on("click", function() {
                        k.fadeOut(c.drop_down_effect_out_speed)
                    })
                }, g.prototype.outside_close = function(d) {
                    d === !0 && c.outside_close_dropDown === !0 && "boolean" == typeof c.outside_close_dropDown && a(window).on("click", function(a) {
                        b.is(a.target) || 0 !== b.has(a.target).length || k.fadeOut(c.drop_down_effect_out_speed)
                    })
                }, g.prototype.sibling_mobile = function(a) {
                    a.is(":hidden") ? (a.parents(d).siblings(d).find(k).fadeOut(0), a.parents(j).siblings(j).find(k).fadeOut(0)) : a.parent(d).find(k).fadeOut(0)
                }, g.prototype.sibling_desktop = function(a) {
                    a.is(":hidden") ? (a.parents(d).siblings(d).find(k).fadeOut(c.drop_down_effect_out_speed), a.parents(j).siblings(j).find(k).fadeOut(c.drop_down_effect_out_speed)) : a.parent(d).find(k).fadeOut(c.drop_down_effect_out_speed)
                }, g.prototype.trigger_click = function(b) {
                    var d = this;
                    b === !0 && "click" === c.trigger && "string" == typeof c.trigger ? k.prev(e).on("click", function(b) {
                        b.stopPropagation(), b.stopImmediatePropagation(), b.preventDefault();
                        var e = a(this).next(k);
                        e.is(":hidden") ? e.delay(c.drop_down_effect_in_delay).fadeIn(c.drop_down_effect_in_speed) : e.delay(c.drop_down_effect_out_delay).fadeOut(c.drop_down_effect_out_speed), d.sibling_desktop(e)
                    }) : (b === !1 && "hover" === c.trigger || b === !1 && "click" === c.trigger) && k.prev(e).on("click", function(b) {
                        b.stopPropagation(), b.stopImmediatePropagation();
                        var c, f, g;
                        c = k.prev(e).innerWidth() / 2, f = b.pageX, f > c && b.preventDefault(), g = a(this).next(k), g.is(":hidden") ? g.delay(0).fadeIn(0) : g.delay(0).fadeOut(0), d.sibling_mobile(g)
                    })
                }, g.prototype.input_select = function() {
                    b.find(u).dropdown({
                        autoinit: ".menu-select"
                    })
                }, g.prototype.trigger_hover = function(b) {
                    b === !0 && "hover" === c.trigger && "string" == typeof c.trigger && k.parents(d).on({
                        mouseenter: function() {
                            a(this).find(k).first(k).stop(!0).delay(c.drop_down_effect_in_delay).fadeIn(c.drop_down_effect_in_speed)
                        },
                        mouseleave: function() {
                            a(this).find(k).first(k).stop(!0).delay(c.drop_down_effect_out_delay).fadeOut(c.drop_down_effect_out_speed)
                        }
                    })
                }, g.prototype.stickyHeader = function(d) {
                    if (d === !0 && c.top_fixed === !0 && "boolean" == typeof c.top_fixed) return a(window).off("scroll"), !1;
                    var f, e = !0;
                    f = d === !0 ? c.sticky_header_height : c.mobile_sticky_header_height, d === !0 && c.sticky_header === !0 || d === !1 && c.mobile_sticky_header === !0 ? a(window).off("scroll").on("scroll", function() {
                        a(window).scrollTop() > f ? e === !0 && b.fadeOut(c.sticky_header_animation_speed, function() {
                            a(this).addClass(n).fadeIn(c.sticky_header_animation_speed), e = !1
                        }) : e === !1 && b.fadeOut(c.sticky_header_animation_speed, function() {
                            a(this).removeClass(n).fadeIn(c.sticky_header_animation_speed), e = !0
                        })
                    }) : (a(window).off("scroll"), b.removeClass(n))
                }, g.prototype.menu_fullWidth = function() {
                    c.full_width === !0 && "boolean" == typeof c.full_width ? b.addClass(o) : b.removeClass(o)
                }, g.prototype.rightToLeft = function() {
                    c.right_to_left === !0 && "boolean" == typeof c.right_to_left ? b.addClass(A) : b.removeClass(A)
                }, g.prototype.menu_fixed = function(a) {
                    a === !0 && c.top_fixed === !0 && "boolean" == typeof c.top_fixed ? b.addClass(n) : b.removeClass(n)
                }, g.prototype.searchBar_hide = function(a) {
                    a === !0 && c.search_bar_hide === !0 && "boolean" == typeof c.search_bar_hide ? l.addClass(m) : a === !1 && c.mobile_search_bar_hide === !0 && "boolean" == typeof c.mobile_search_bar_hide ? (l.addClass(m), j.addClass(m)) : (l.removeClass(m), j.removeClass(m))
                }, g.prototype.google_ripple_effect = function(d, e) {
                    c.ripple_effect === !0 && "boolean" == typeof c.ripple_effect && (d = b.find(".mash-list-items > li > a,.drop-down > li > a,.btn,.collapsible-header,.vertical-tabs a,.nav.nav-tabs li a,.list-group a,.vertical-tabs-content-container > a,.mash-tabs-container .mash-tabs-mobile,.mash-tabs-container .mash-tabs a"), e = k.find("button, input"), a.material.ripples(d.add(e)))
                }, g.prototype.separator_show = function() {
                    c.separator === !0 && "boolean" == typeof c.separator ? b.addClass(i) : b.removeClass(i)
                }, g.prototype.color_change_time = function(a, d, e) {
                    c.timer_on === !0 && "boolean" == typeof c.timer_on && (a = new Date, d = a.getHours(), e = d < 12 ? c.timer_morning_color : d < 18 ? c.timer_afternoon_color : c.timer_evening_color, b.attr("data-color", e))
                }, g.prototype.destroy = function() {
                    k.parents(d).off("mouseenter mouseleave"), k.prev(e).off("click"), a(window).off("click"), p.off("click mouseenter", ".vertical-tabs > a"), v.hide(0), w.find("a").removeClass(f), w.find("a").off("click"), x.find(">div").hide(0)
                }, g.prototype.mediaQuery = function(a, b) {
                    function d(a) {
                        a.matches ? (b.destroy(), b.searchBar_hide(!1), b.menu_fixed(!1), b.stickyHeader(!1), b.trigger_hover(!1), b.trigger_click(!1), b.outside_close(!1), b.verticalTabsResponsive(!1)) : (b.destroy(), b.searchBar_hide(!0), b.menu_fixed(!0), b.stickyHeader(!0), b.trigger_hover(!0), b.trigger_click(!0), b.outside_close(!0), b.verticalTabsResponsive(!0))
                    }
                    b = this, a = window.matchMedia("(max-width: " + c.media_query_max_width + "px)"), d(a), a.addListener(d)
                }, g
            }(), h = new g, h.mediaQuery(), h.color_change_time(), h.separator_show(), h.google_ripple_effect(), h.rightToLeft(), h.menu_fullWidth(), h.input_select(), h.brand_close_dropDown(), h.drop_down_option_outside(), h.collapsible_accordion(), h.contact_form_ajax()
        })
    }
}(jQuery),
function() {
    var a = function(a, b) {
        return function() {
            return a.apply(b, arguments)
        }
    };
    ! function(b, c) {
        var d, e;
        return c.Offcanvas = d = function() {
            function d(c) {
                var e;
                this.element = c, this.bodyOverflow = a(this.bodyOverflow, this), this._sendEventsAfter = a(this._sendEventsAfter, this), this._sendEventsBefore = a(this._sendEventsBefore, this), this._documentClicked = a(this._documentClicked, this), this._clicked = a(this._clicked, this), this._navbarHeight = a(this._navbarHeight, this), e = !!this.element.attr("data-target") && this.element.attr("data-target"), e ? (this.target = b(e), this.target.length && !this.target.hasClass("js-offcanas-done") && (this.element.addClass("js-offcanvas-has-events"), this.location = this.target.hasClass("navbar-offcanvas-right") ? "right" : "left", this.target.addClass(transform ? "offcanvas-transform js-offcanas-done" : "offcanvas-position js-offcanas-done"), this.target.data("offcanvas", this), this.element.on("click", this._clicked), this.target.on("transitionend", function(a) {
                    return function() {
                        if (a.target.is(":not(.in)")) return a.target.height("")
                    }
                }(this)), b(document).on("click", this._documentClicked), this.target.find(".dropdown-toggle").each(function() {
                    var a;
                    return a = new OffcanvasDropdown(this)
                }))) : console.warn("Offcanvas: `data-target` attribute must be present.")
            }
            return d.prototype._navbarHeight = function() {
                if (this.target.is(".in")) return this.target.height(b(c).outerHeight())
            }, d.prototype._clicked = function(a) {
                return a.preventDefault(), this._sendEventsBefore(), b(".navbar-offcanvas").not(this.target).removeClass("in"), this.target.toggleClass("in"), this.element.toggleClass("is-open"), this._navbarHeight(), this.bodyOverflow()
            }, d.prototype._documentClicked = function(a) {
                var c;
                if (c = b(a.target), !c.hasClass("offcanvas-toggle") && 0 === c.parents(".offcanvas-toggle").length && 0 === c.parents(".navbar-offcanvas").length && !c.hasClass("navbar-offcanvas") && this.target.hasClass("in")) return a.preventDefault(), this._sendEventsBefore(), this.target.removeClass("in"), this.element.removeClass("is-open"), this._navbarHeight(), this.bodyOverflow()
            }, d.prototype._sendEventsBefore = function() {
                return this.target.hasClass("in") ? this.target.trigger("show.bs.offcanvas") : this.target.trigger("hide.bs.offcanvas")
            }, d.prototype._sendEventsAfter = function() {
                return this.target.hasClass("in") ? this.target.trigger("shown.bs.offcanvas") : this.target.trigger("hidden.bs.offcanvas")
            }, d.prototype.bodyOverflow = function() {
                return this.target.is(".in") ? b("body").addClass("offcanvas-stop-scrolling") : b("body").removeClass("offcanvas-stop-scrolling"), this._sendEventsAfter()
            }, d
        }(), e = function(a) {
            return function() {
                var b, c, d, e;
                return c = document.createElement("div"), e = "translate3d(0px, 0px, 0px)", d = /translate3d\(0px, 0px, 0px\)/g, c.style.cssText = "-webkit-transform: " + e + "; -moz-transform: " + e + "; -o-transform: " + e + "; transform: " + e, b = c.style.cssText.match(d), a.transform = null != b.length
            }
        }(this), b(function() {
            return e(), b('[data-toggle="offcanvas"]').each(function() {
                var a;
                return a = new d(b(this))
            }), b(c).on("resize", function() {
                return b(".navbar-offcanvas.in").each(function() {
                    return b(this).height("").removeClass("in")
                })
            }), b(".offcanvas-toggle").each(function() {
                return b(this).on("click", function(a) {
                    var c, d;
                    if (!b(this).hasClass("js-offcanvas-has-events") && (d = b(this).attr("data-target"), c = b(d))) return c.height(""), c.removeClass("in"), b("body").css({
                        overflow: "",
                        position: ""
                    })
                })
            })
        })
    }(window.jQuery, window)
}.call(this);